{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Documents\\\\Dev\\\\MarioMusic\\\\Mario-Music-MERN\\\\ui\\\\src\\\\components\\\\NoteLength.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useGlobal } from 'reactn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteLength = _ref => {\n  _s();\n\n  let {\n    item,\n    column,\n    noteLength,\n    tempo,\n    setTempo\n  } = _ref;\n  const [currentInstrument, setCurrentInstrument] = useGlobal(\"currentInstrument\");\n  const [counter, setCounter] = useState(0);\n  let halfNoteTempo = 120000;\n  let quarterNoteTempo = 60000;\n  let eighthNoteTempo = 30000;\n  let sixteenthNoteTempo = 15000;\n\n  const changeNoteLength = () => {\n    console.log(\"tempo\", tempo);\n\n    if (counter === 0) {\n      noteLength[column].length = eighthNoteTempo / tempo;\n      item.name = '1/8';\n      setCounter(counter + 1);\n    } else if (counter === 1) {\n      noteLength[column].length = sixteenthNoteTempo / tempo;\n      item.name = '1/16';\n      setCounter(counter + 1);\n    } else if (counter === 2) {\n      noteLength[column].length = halfNoteTempo / tempo;\n      item.name = '1/2';\n      setCounter(counter + 1);\n    } else if (counter === 3) {\n      noteLength[column].length = quarterNoteTempo / tempo;\n      item.name = '1/4';\n      setCounter(0);\n    }\n\n    forceStateRerender();\n  };\n\n  const forceStateRerender = () => {\n    let stateTrick = currentInstrument;\n    setCurrentInstrument('fake');\n    setCurrentInstrument(stateTrick);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"pr-[1rem]\",\n    onClick: () => changeNoteLength(),\n    children: item.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteLength, \"PsBYXZK9LLp0tLGNGRFbygsCHkk=\", false, function () {\n  return [useGlobal];\n});\n\n_c = NoteLength;\nexport default NoteLength;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteLength\");","map":{"version":3,"names":["useState","useGlobal","NoteLength","item","column","noteLength","tempo","setTempo","currentInstrument","setCurrentInstrument","counter","setCounter","halfNoteTempo","quarterNoteTempo","eighthNoteTempo","sixteenthNoteTempo","changeNoteLength","console","log","length","name","forceStateRerender","stateTrick"],"sources":["C:/Users/matth/Documents/Dev/MarioMusic/Mario-Music-MERN/ui/src/components/NoteLength.jsx"],"sourcesContent":["import { useState, useGlobal } from 'reactn'\r\n\r\nconst NoteLength = ({item, column, noteLength, tempo, setTempo}) => {\r\n    const [currentInstrument, setCurrentInstrument ] = useGlobal(\"currentInstrument\")\r\n    const [counter, setCounter] = useState(0)\r\n\r\n\r\n    let halfNoteTempo =  120000 \r\n    let quarterNoteTempo = 60000 \r\n    let eighthNoteTempo = 30000 \r\n    let sixteenthNoteTempo = 15000 \r\n\r\n    const changeNoteLength = () => {\r\n        console.log(\"tempo\", tempo)\r\n        if (counter === 0){\r\n            noteLength[column].length = eighthNoteTempo / tempo\r\n            item.name = '1/8'\r\n            setCounter(counter +1)\r\n        }\r\n        else if (counter === 1){\r\n            noteLength[column].length = sixteenthNoteTempo / tempo\r\n            item.name = '1/16'\r\n            setCounter( counter +1)\r\n        }\r\n        else if (counter === 2){\r\n            noteLength[column].length = halfNoteTempo / tempo\r\n            item.name = '1/2'\r\n            setCounter(counter +1)\r\n        }\r\n        else if (counter === 3){\r\n            noteLength[column].length = quarterNoteTempo / tempo\r\n            item.name = '1/4'\r\n            setCounter(0)\r\n        }\r\n        forceStateRerender()\r\n    }\r\n\r\n    const forceStateRerender = () => {\r\n        let stateTrick = currentInstrument\r\n        setCurrentInstrument('fake')\r\n        setCurrentInstrument(stateTrick)\r\n      }\r\n\r\n    return (\r\n        <p className=\"pr-[1rem]\" onClick={() => changeNoteLength()}>{item.name }</p>\r\n    )\r\n}\r\n\r\nexport default NoteLength"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,QAApC;;;AAEA,MAAMC,UAAU,GAAG,QAAiD;EAAA;;EAAA,IAAhD;IAACC,IAAD;IAAOC,MAAP;IAAeC,UAAf;IAA2BC,KAA3B;IAAkCC;EAAlC,CAAgD;EAChE,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA6CR,SAAS,CAAC,mBAAD,CAA5D;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;EAGA,IAAIY,aAAa,GAAI,MAArB;EACA,IAAIC,gBAAgB,GAAG,KAAvB;EACA,IAAIC,eAAe,GAAG,KAAtB;EACA,IAAIC,kBAAkB,GAAG,KAAzB;;EAEA,MAAMC,gBAAgB,GAAG,MAAM;IAC3BC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;;IACA,IAAII,OAAO,KAAK,CAAhB,EAAkB;MACdL,UAAU,CAACD,MAAD,CAAV,CAAmBe,MAAnB,GAA4BL,eAAe,GAAGR,KAA9C;MACAH,IAAI,CAACiB,IAAL,GAAY,KAAZ;MACAT,UAAU,CAACD,OAAO,GAAE,CAAV,CAAV;IACH,CAJD,MAKK,IAAIA,OAAO,KAAK,CAAhB,EAAkB;MACnBL,UAAU,CAACD,MAAD,CAAV,CAAmBe,MAAnB,GAA4BJ,kBAAkB,GAAGT,KAAjD;MACAH,IAAI,CAACiB,IAAL,GAAY,MAAZ;MACAT,UAAU,CAAED,OAAO,GAAE,CAAX,CAAV;IACH,CAJI,MAKA,IAAIA,OAAO,KAAK,CAAhB,EAAkB;MACnBL,UAAU,CAACD,MAAD,CAAV,CAAmBe,MAAnB,GAA4BP,aAAa,GAAGN,KAA5C;MACAH,IAAI,CAACiB,IAAL,GAAY,KAAZ;MACAT,UAAU,CAACD,OAAO,GAAE,CAAV,CAAV;IACH,CAJI,MAKA,IAAIA,OAAO,KAAK,CAAhB,EAAkB;MACnBL,UAAU,CAACD,MAAD,CAAV,CAAmBe,MAAnB,GAA4BN,gBAAgB,GAAGP,KAA/C;MACAH,IAAI,CAACiB,IAAL,GAAY,KAAZ;MACAT,UAAU,CAAC,CAAD,CAAV;IACH;;IACDU,kBAAkB;EACrB,CAvBD;;EAyBA,MAAMA,kBAAkB,GAAG,MAAM;IAC7B,IAAIC,UAAU,GAAGd,iBAAjB;IACAC,oBAAoB,CAAC,MAAD,CAApB;IACAA,oBAAoB,CAACa,UAAD,CAApB;EACD,CAJH;;EAMA,oBACI;IAAG,SAAS,EAAC,WAAb;IAAyB,OAAO,EAAE,MAAMN,gBAAgB,EAAxD;IAAA,UAA6Db,IAAI,CAACiB;EAAlE;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CA5CD;;GAAMlB,U;UACiDD,S;;;KADjDC,U;AA8CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}