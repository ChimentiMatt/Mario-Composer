{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Documents\\\\Dev\\\\MarioMusic\\\\Mario-Music-MERN\\\\ui\\\\src\\\\components\\\\SingleNote.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useGlobal } from 'reactn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  _s();\n\n  let {\n    notes,\n    note,\n    index,\n    column,\n    arraysLists,\n    instrumentLists\n  } = _ref;\n  const [currentInstrument, setCurrentInstrument] = useGlobal(\"currentInstrument\");\n  const [refresh, setRefresh] = useState('');\n  const [erasing, setErasing] = useGlobal('erasing');\n  const [sharpToggle, setSharpToggle] = useGlobal(\"sharpToggle\");\n  let currentNote = '';\n\n  const hearNote = () => {\n    identifySharp();\n    if (erasing) new Audio(`./sounds/eraser/eraser.mp3`).play();else new Audio(`./sounds/${currentInstrument}/${currentNote}${currentInstrument}.mp3`).play();\n    new Audio(`./sounds/${currentInstrument}/${currentNote}${currentInstrument}.mp3`).play();\n    addNoteToArray();\n    changeNoteImage();\n    setRefresh(\"turtles travel through time \");\n  };\n\n  const changeNoteImage = () => {\n    notes[index].img = `./images/${currentInstrument}.gif`;\n    if (erasing) setRefresh('asfjklasdfj');\n    setRefresh(\"refresh\");\n    forceStateRerender();\n  };\n\n  const forceStateRerender = () => {\n    let stateTrick = currentInstrument;\n    setCurrentInstrument('fake');\n    setCurrentInstrument(stateTrick);\n  };\n\n  const identifySharp = () => {\n    currentNote = note.name;\n\n    if (sharpToggle) {\n      if (['C', 'D', 'F', 'G', 'A', 'CHigh'].includes(note.name)) {\n        currentNote += \"Sharp\";\n      } else {\n        currentNote = note.name;\n      }\n    }\n  };\n\n  const addNoteToArray = () => {\n    identifySharp(); //stops stacking notes on each other\n\n    if (note.img === './images/note.gif') {\n      if (arraysLists[6][column] !== null) {\n        arraysLists[7][column] = currentNote;\n        instrumentLists[7][column] = currentInstrument;\n      } else if (arraysLists[5][column] !== null) {\n        arraysLists[6][column] = currentNote;\n        instrumentLists[6][column] = currentInstrument;\n      } else if (arraysLists[4][column] !== null) {\n        arraysLists[5][column] = currentNote;\n        instrumentLists[5][column] = currentInstrument;\n      } else if (arraysLists[3][column] !== null) {\n        arraysLists[4][column] = currentNote;\n        instrumentLists[4][column] = currentInstrument;\n      } else if (arraysLists[2][column] !== null) {\n        arraysLists[3][column] = currentNote;\n        instrumentLists[3][column] = currentInstrument;\n      } else if (arraysLists[1][column] !== null) {\n        arraysLists[2][column] = currentNote;\n        instrumentLists[2][column] = currentInstrument;\n      } else if (arraysLists[0][column] !== null) {\n        note.instrument = currentInstrument;\n        arraysLists[1][column] = currentNote;\n        instrumentLists[1][column] = currentInstrument;\n      } else {\n        note.instrument = currentInstrument;\n        arraysLists[0][column] = currentNote;\n        instrumentLists[0][column] = note.instrument;\n      }\n    } else {\n      if (erasing) {\n        arraysLists[0][column] = null;\n        arraysLists[1][column] = null;\n        arraysLists[2][column] = null;\n        arraysLists[3][column] = null;\n        arraysLists[4][column] = null;\n        arraysLists[5][column] = null;\n        arraysLists[6][column] = null;\n        arraysLists[7][column] = null;\n        let adjust = column * 8;\n        notes[adjust].img = `./images/note.gif`;\n        notes[adjust + 1].img = `./images/note.gif`;\n        notes[adjust + 2].img = `./images/note.gif`;\n        notes[adjust + 3].img = `./images/note.gif`;\n        notes[adjust + 4].img = `./images/note.gif`;\n        notes[adjust + 5].img = `./images/note.gif`;\n        notes[adjust + 6].img = `./images/note.gif`;\n        notes[adjust + 7].img = `./images/note.gif`;\n      }\n    }\n\n    console.log(arraysLists);\n    changeNoteImage();\n    currentNote = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: `note${index}`,\n      className: `note h-[3.9rem] column${column} ${note.name}`,\n      src: note.img,\n      onClick: () => hearNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Note, \"t9RnWjh8+S3djIsTaXQD+mE72Bc=\", false, function () {\n  return [useGlobal, useGlobal, useGlobal];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["useState","useGlobal","Note","notes","note","index","column","arraysLists","instrumentLists","currentInstrument","setCurrentInstrument","refresh","setRefresh","erasing","setErasing","sharpToggle","setSharpToggle","currentNote","hearNote","identifySharp","Audio","play","addNoteToArray","changeNoteImage","img","forceStateRerender","stateTrick","name","includes","instrument","adjust","console","log"],"sources":["C:/Users/matth/Documents/Dev/MarioMusic/Mario-Music-MERN/ui/src/components/SingleNote.jsx"],"sourcesContent":["import { useState, useGlobal } from 'reactn'\r\n\r\nconst Note = ({  notes, note, index, column, arraysLists, instrumentLists } ) => {\r\n  const [currentInstrument, setCurrentInstrument ] = useGlobal(\"currentInstrument\")\r\n  const [refresh, setRefresh ] = useState('')\r\n  const [erasing, setErasing] = useGlobal('erasing')\r\n  const [sharpToggle, setSharpToggle] = useGlobal(\"sharpToggle\")\r\n\r\n  let currentNote = ''\r\n\r\n  const hearNote = () => {\r\n    identifySharp()\r\n    if (erasing) new Audio(`./sounds/eraser/eraser.mp3`).play()\r\n    else new Audio(`./sounds/${currentInstrument}/${currentNote}${currentInstrument}.mp3`).play()\r\n    new Audio(`./sounds/${currentInstrument}/${currentNote}${currentInstrument}.mp3`).play()\r\n\r\n    addNoteToArray()\r\n    changeNoteImage()\r\n    setRefresh(\"turtles travel through time \")\r\n  }\r\n\r\n  const changeNoteImage = () => {\r\n    notes[index].img = `./images/${currentInstrument}.gif`\r\n    if (erasing) setRefresh('asfjklasdfj')\r\n    setRefresh(\"refresh\")\r\n\r\n    forceStateRerender()\r\n  }\r\n\r\n  const forceStateRerender = () => {\r\n    let stateTrick = currentInstrument\r\n    setCurrentInstrument('fake')\r\n    setCurrentInstrument(stateTrick)\r\n  }\r\n\r\n  const identifySharp = () => {\r\n    currentNote = note.name\r\n\r\n    if (sharpToggle){\r\n      if (['C','D', 'F', 'G', 'A', 'CHigh'].includes(note.name)){\r\n        currentNote += \"Sharp\"\r\n      }\r\n      else{\r\n        currentNote = note.name\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  const addNoteToArray = () => {\r\n    identifySharp()\r\n\r\n    //stops stacking notes on each other\r\n    if (note.img === './images/note.gif'){\r\n\r\n      if (arraysLists[6][column] !== null) {\r\n        arraysLists[7][column] = currentNote\r\n        instrumentLists[7][column] = currentInstrument\r\n      }\r\n      else if (arraysLists[5][column] !== null) {\r\n        arraysLists[6][column] = currentNote\r\n        instrumentLists[6][column] = currentInstrument\r\n      }\r\n      else if (arraysLists[4][column] !== null) {\r\n        arraysLists[5][column] = currentNote\r\n        instrumentLists[5][column] = currentInstrument\r\n      }\r\n      else if (arraysLists[3][column] !== null) {\r\n        arraysLists[4][column] = currentNote\r\n        instrumentLists[4][column] = currentInstrument\r\n      }\r\n      else if (arraysLists[2][column] !== null) {\r\n        arraysLists[3][column] = currentNote\r\n        instrumentLists[3][column] = currentInstrument\r\n      }\r\n      else if (arraysLists[1][column] !== null) {\r\n        arraysLists[2][column] = currentNote\r\n        instrumentLists[2][column] = currentInstrument\r\n      }\r\n      else if (arraysLists[0][column] !== null) {\r\n        note.instrument = currentInstrument\r\n        arraysLists[1][column] = currentNote\r\n        instrumentLists[1][column] = currentInstrument\r\n      }\r\n      else {\r\n          note.instrument = currentInstrument\r\n          arraysLists[0][column] = currentNote\r\n          instrumentLists[0][column] = note.instrument\r\n        }\r\n    }\r\n    else{\r\n      if (erasing){\r\n      \r\n        arraysLists[0][column] = null\r\n        arraysLists[1][column] = null\r\n        arraysLists[2][column] = null\r\n        arraysLists[3][column] = null\r\n        arraysLists[4][column] = null\r\n        arraysLists[5][column] = null\r\n        arraysLists[6][column] = null\r\n        arraysLists[7][column] = null\r\n\r\n        let adjust = column * 8\r\n        notes[adjust].img = `./images/note.gif`\r\n        notes[(adjust + 1) ].img = `./images/note.gif`\r\n        notes[(adjust + 2) ].img = `./images/note.gif`\r\n        notes[(adjust + 3) ].img = `./images/note.gif`\r\n        notes[(adjust + 4) ].img = `./images/note.gif`\r\n        notes[(adjust + 5) ].img = `./images/note.gif`\r\n        notes[(adjust + 6) ].img = `./images/note.gif`\r\n        notes[(adjust + 7) ].img = `./images/note.gif`\r\n      \r\n        }\r\n\r\n      }\r\n      console.log(arraysLists)\r\n    changeNoteImage()\r\n    currentNote = \"\"\r\n  }\r\n  \r\n  return (\r\n    <>  \r\n        <img id={`note${index}`} className={`note h-[3.9rem] column${column} ${note.name}`} src={note.img}  onClick={() => hearNote()}/>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Note"],"mappings":"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"},"metadata":{},"sourceType":"module"}