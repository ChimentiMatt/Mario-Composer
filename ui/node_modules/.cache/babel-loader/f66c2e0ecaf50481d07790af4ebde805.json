{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Documents\\\\Dev\\\\MarioMusic\\\\ui\\\\src\\\\components\\\\Note.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useGlobal } from 'reactn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  _s();\n\n  let {\n    notes,\n    note,\n    index,\n    column,\n    arraysLists,\n    instrumentLists\n  } = _ref;\n  const [currentInstrument, setCurrentInstrument] = useGlobal(\"currentInstrument\");\n  const [refresh, setRefresh] = useState('');\n\n  const hearNote = () => {\n    new Audio(`./sounds/${currentInstrument}/${note.name}${currentInstrument}.mp3`).play();\n    addNoteToArray();\n    changeNoteImage();\n  };\n\n  const changeNoteImage = () => {\n    notes[index].img = `./images/${currentInstrument}.gif`;\n    setRefresh(\"refresh\");\n  };\n\n  const addNoteToArray = () => {\n    if (arraysLists[6][column] !== null) {\n      arraysLists[7][column] = note.name;\n      instrumentLists[7][column] = currentInstrument;\n    } else if (arraysLists[5][column] !== null) {\n      arraysLists[6][column] = note.name;\n      instrumentLists[6][column] = currentInstrument;\n    } else if (arraysLists[4][column] !== null) {\n      arraysLists[5][column] = note.name;\n      instrumentLists[5][column] = currentInstrument;\n    } else if (arraysLists[3][column] !== null) {\n      arraysLists[4][column] = note.name;\n      instrumentLists[4][column] = currentInstrument;\n    } else if (arraysLists[2][column] !== null) {\n      arraysLists[3][column] = note.name;\n      instrumentLists[3][column] = currentInstrument;\n    } else if (arraysLists[1][column] !== null) {\n      arraysLists[2][column] = note.name;\n      instrumentLists[2][column] = currentInstrument;\n    } else if (arraysLists[0][column] !== null) {\n      note.instrument = currentInstrument;\n      arraysLists[1][column] = note.name;\n      instrumentLists[1][column] = currentInstrument;\n    } else {\n      // if (arraysLists[0][column].note.instrument )\n      console.log(arraysLists[0][column]);\n      note.instrument = currentInstrument;\n      arraysLists[0][column] = note.name;\n      instrumentLists[0][column] = note.instrument;\n    } // console.log('playList1', arraysLists[0])\n    // console.log(\"PlayListArray\", arraysLists)\n\n\n    console.log(\"Instra list\", instrumentLists);\n    console.log(\"current Inst\", currentInstrument);\n    console.log(\"NOTE\", note);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: `note${index}`,\n      className: `note column${column} bg-slate-500`,\n      src: note.img,\n      onClick: () => hearNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Note, \"T/L2QJsPf3rIzhKTvje3A007QJI=\", false, function () {\n  return [useGlobal];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["useState","useGlobal","Note","notes","note","index","column","arraysLists","instrumentLists","currentInstrument","setCurrentInstrument","refresh","setRefresh","hearNote","Audio","name","play","addNoteToArray","changeNoteImage","img","instrument","console","log"],"sources":["C:/Users/matth/Documents/Dev/MarioMusic/ui/src/components/Note.jsx"],"sourcesContent":["import { useState, useGlobal } from 'reactn'\r\n\r\n\r\nconst Note = ({ notes, note, index, column, arraysLists, instrumentLists } ) => {\r\n  const [currentInstrument, setCurrentInstrument ] = useGlobal(\"currentInstrument\")\r\n  const [refresh, setRefresh ] = useState('')\r\n\r\n  const hearNote = () => {\r\n    new Audio(`./sounds/${currentInstrument}/${note.name}${currentInstrument}.mp3`).play()\r\n    addNoteToArray()\r\n    changeNoteImage()\r\n  }\r\n\r\n  const changeNoteImage = () => {\r\n    notes[index].img = `./images/${currentInstrument}.gif`\r\n    setRefresh(\"refresh\")\r\n  }\r\n\r\n  const addNoteToArray = () => {\r\n    \r\n    if (arraysLists[6][column] !== null) {\r\n      arraysLists[7][column] = note.name\r\n      instrumentLists[7][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[5][column] !== null) {\r\n      arraysLists[6][column] = note.name\r\n      instrumentLists[6][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[4][column] !== null) {\r\n      arraysLists[5][column] = note.name\r\n      instrumentLists[5][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[3][column] !== null) {\r\n      arraysLists[4][column] = note.name\r\n      instrumentLists[4][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[2][column] !== null) {\r\n      arraysLists[3][column] = note.name\r\n      instrumentLists[3][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[1][column] !== null) {\r\n      arraysLists[2][column] = note.name\r\n      instrumentLists[2][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[0][column] !== null) {\r\n      note.instrument = currentInstrument\r\n      arraysLists[1][column] = note.name\r\n      instrumentLists[1][column] = currentInstrument\r\n    }\r\n    else {\r\n      // if (arraysLists[0][column].note.instrument )\r\n      console.log(arraysLists[0][column])\r\n      note.instrument = currentInstrument\r\n      arraysLists[0][column] = note.name\r\n      instrumentLists[0][column] = note.instrument\r\n\r\n    }\r\n\r\n    // console.log('playList1', arraysLists[0])\r\n    // console.log(\"PlayListArray\", arraysLists)\r\n    \r\n    console.log(\"Instra list\", instrumentLists)\r\n    console.log(\"current Inst\", currentInstrument)\r\n\r\n    console.log(\"NOTE\", note)\r\n  }\r\n  \r\n  return (\r\n    <>  \r\n        <img id={`note${index}`} className={`note column${column} bg-slate-500`} src={note.img} onClick={() => hearNote()}/>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Note"],"mappings":"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"},"metadata":{},"sourceType":"module"}