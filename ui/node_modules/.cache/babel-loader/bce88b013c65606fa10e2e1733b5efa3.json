{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Documents\\\\Dev\\\\MarioMusic\\\\Mario-Music-MERN\\\\ui\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { setGlobal, addCallback, useState, useGlobal, useRef } from 'reactn';\nimport React, { useEffect } from 'react';\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport SongList from './components/SongList';\nimport MusicMakerContainer from \"./components/MusicMakerContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Fixes audio delay in Safari \n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioCtx = new AudioContext();\n  const numberOfColumns = 200;\n  const [notes, setNotes] = useGlobal([]);\n  const [noteLength, setNoteLength] = useState([]);\n  const [songName, setSongName] = useGlobal(\"songName\");\n  const [token, setToken] = useGlobal(\"token\");\n  const [newSong, setNewSong] = useGlobal(\"newSong\");\n  const [copyArraysLists, setCopyArraysLists] = useGlobal(\"copyArraysLists\");\n  const [copyNoteLength, setCopyNoteLength] = useState(\"copyNoteLength\");\n  const [copyInstrumentLists, setCopyInstrumentLists] = useState(\"copyInstrumentLists\");\n  const [dummyState, setDummyState] = useState(\"test\");\n  let notesArray = [];\n  let instrument = 'piano';\n  let keepGoing = true;\n  let time = 100;\n  const tempoBtn = useRef(''); // let halfNoteTempo =  120000 / tempo\n  // let quarterNoteTempo = 60000 / tempo\n  // let eighthNoteTempo = 30000 / tempo\n  // let sixteenthNoteTempo = 15000 / tempo\n\n  useEffect(() => {\n    setNullInArrays();\n  });\n  let counter = 0;\n  useEffect(() => {\n    setNewSong(false);\n    tempoBtn.current.disabled = true;\n\n    for (let i = 1; i < numberOfColumns + 1; i++) {\n      // setNotes(notes => [...notes, ...notesArray])\n      counter += 1;\n      if (counter === 9) counter = 1;\n      let note = 'C';\n      if (counter === 1) note = 'CHigh';else if (counter === 2) note = 'B';else if (counter === 3) note = 'A';else if (counter === 4) note = 'G';else if (counter === 5) note = 'F';else if (counter === 6) note = 'E';else if (counter === 7) note = 'D';else if (counter === 8) note = 'C'; // counter += 1\n      // if (counter === 15) counter = 1\n      // let note = 'C'\n      // if (counter === 1) note = 'CHighSharp'\n      // else if (counter === 2) note = 'CHigh'\n      // else if (counter === 3) note ='B'\n      // else if (counter === 4) note ='ASharp'\n      // else if (counter === 5) note ='A'\n      // else if (counter === 6) note ='GSharp'\n      // else if (counter === 7) note ='G'\n      // else if (counter === 8) note ='FSharp'\n      // else if (counter === 9) note ='F'\n      // else if (counter === 10) note ='E'\n      // else if (counter === 11) note ='DSharp'\n      // else if (counter === 12) note ='D'\n      // else if (counter === 13) note ='CSharp'\n      // else if (counter === 14) note ='C'\n\n      let newNote = {\n        name: note,\n        img: './images/note.gif',\n        instrument: 'piano'\n      };\n      notesArray.push(newNote);\n      setNotes(notesArray);\n      let newNoteLength = {\n        length: 1000,\n        name: '1/4'\n      };\n      if (counter % 8 === 0) noteLength.push(newNoteLength);\n    }\n\n    setCopyArraysLists(arraysLists);\n    setCopyNoteLength(noteLength);\n    setCopyInstrumentLists(instrument);\n  }, []);\n  let playList0 = [];\n  let playList1 = [];\n  let playList2 = [];\n  let playList3 = [];\n  let playList4 = [];\n  let playList5 = [];\n  let playList6 = [];\n  let playList7 = [];\n  let soundTypeList0 = [];\n  let soundTypeList1 = [];\n  let soundTypeList2 = [];\n  let soundTypeList3 = [];\n  let soundTypeList4 = [];\n  let soundTypeList5 = [];\n  let soundTypeList6 = [];\n  let soundTypeList7 = [];\n  let arraysLists = [playList0, playList1, playList2, playList3, playList4, playList5, playList6, playList7];\n  let instrumentLists = [soundTypeList0, soundTypeList1, soundTypeList2, soundTypeList3, soundTypeList4, soundTypeList5, soundTypeList6, soundTypeList7];\n\n  const setNullInArrays = () => {\n    for (let i = 0; i < numberOfColumns; i++) {\n      playList0.push(null);\n      playList1.push(null);\n      playList2.push(null);\n      playList3.push(null);\n      playList4.push(null);\n      playList5.push(null);\n      playList6.push(null);\n      playList7.push(null);\n    }\n  };\n\n  let loopCounter = 0; // let halfNoteTempo =  120000 / tempo\n  // let quarterNoteTempo = 60000 / tempo\n  // let eighthNoteTempo = 30000 / tempo\n  // let sixteenthNoteTempo = 15000 / tempo\n\n  const updateNoteDuration = loopCounter => {\n    // get the note length from object and adjust to tempo\n    if (copyNoteLength[loopCounter].name === '1/4') {\n      return 60000 / time;\n    } else if (copyNoteLength[loopCounter].name === '1/8') {\n      return 30000 / time;\n    } else if (copyNoteLength[loopCounter].name === '1/16') {\n      return 15000 / time;\n    } else if (copyNoteLength[loopCounter].name === '1/2') {\n      return 120000 / time;\n    }\n  };\n\n  let nonStateNewsong = false;\n\n  const playHandler = () => {\n    nonStateNewsong = newSong;\n    keepGoing = true;\n    playInProgress = true; // handles loading in a song\n\n    if (nonStateNewsong === true) {\n      nonStateNewsong = false; // setNewSong(false)\n\n      arraysLists = copyArraysLists;\n      instrumentLists = copyInstrumentLists;\n      playList0 = arraysLists[0];\n      playList1 = arraysLists[1];\n      playList2 = arraysLists[2];\n      playList3 = arraysLists[3];\n      playList4 = arraysLists[4];\n      playList5 = arraysLists[5];\n      playList6 = arraysLists[6];\n      playList7 = arraysLists[7];\n    }\n\n    playSong();\n  };\n\n  const stopHander = () => {\n    keepGoing = false;\n    playInProgress = false;\n    loopCounter = 0;\n  }; // State causes problem with this funciton. Due to the callback of this function on itself, \n  // state would que with its original values, thus there are varaibles that are non state versions\n\n\n  const playSong = () => {\n    // used to show how state breaks the function. Comment it in and the app will be full of bugs such as the stop button no longer working\n    // setDummyState('change')\n    if (keepGoing) {\n      scrollToTarget(loopCounter);\n\n      if (playList0[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[0][loopCounter]}/${playList0[loopCounter]}${instrumentLists[0][loopCounter]}.mp3`).play(); // new Audio(`./sounds/beep/Cbeep.mp3`).play()\n        // gsap.to(\"#note1\", {y: \"-1rem\", ease: \"none\", duration: .3})\n        // gsap.to(\"#note1\", {delay: .3, y: \"-0rem\", ease: \"none\", duration: .3})\n      }\n\n      if (playList1[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[1][loopCounter]}/${playList1[loopCounter]}${instrumentLists[1][loopCounter]}.mp3`).play();\n      }\n\n      if (playList2[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[2][loopCounter]}/${playList2[loopCounter]}${instrumentLists[2][loopCounter]}.mp3`).play();\n      }\n\n      if (playList3[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[3][loopCounter]}/${playList3[loopCounter]}${instrumentLists[3][loopCounter]}.mp3`).play();\n      }\n\n      if (playList4[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[4][loopCounter]}/${playList4[loopCounter]}${instrumentLists[4][loopCounter]}.mp3`).play();\n      }\n\n      if (playList5[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[5][loopCounter]}/${playList5[loopCounter]}${instrumentLists[5][loopCounter]}.mp3`).play();\n      }\n\n      if (playList6[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[6][loopCounter]}/${playList6[loopCounter]}${instrumentLists[6][loopCounter]}.mp3`).play();\n      }\n\n      if (playList7[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[7][loopCounter]}/${playList7[loopCounter]}${instrumentLists[7][loopCounter]}.mp3`).play();\n      }\n\n      loopCounter += 1;\n    } else {\n      loopCounter = 0;\n    }\n\n    if (keepGoing) {\n      // Function Calls itself to repeat playlist\n      setTimeout(playSong, updateNoteDuration(loopCounter - 1));\n    }\n  };\n\n  let noteSection = document.getElementById('noteSection');\n  let distance = -40;\n  let playInProgress = false;\n\n  const scrollToTarget = loopCounter => {\n    distance += 40;\n    playInProgress = true;\n    let startTime = null;\n    let requestId;\n\n    const loop = function (currentTime) {\n      if (!startTime) {\n        startTime = currentTime;\n      } // Elapsed time in miliseconds\n\n\n      let time = currentTime - startTime;\n      let percent = Math.min(time / updateNoteDuration(loopCounter)); // console.log(noteLength[durationCounter], 'counter', durationCounter)s\n      // noteSection.scrollTo(startPos + diff * percent, 0);\n\n      noteSection.scrollTo(distance + 40 * percent, 0);\n\n      if (time < updateNoteDuration(loopCounter) && playInProgress === true) {\n        // Continue moving\n        requestId = window.requestAnimationFrame(loop);\n      } else if (!playInProgress) {\n        window.cancelAnimationFrame(requestId);\n        noteSection.scrollTo(0, 0);\n        distance = -40; // percent = 0\n      }\n    };\n\n    requestId = window.requestAnimationFrame(loop);\n  };\n\n  const logIt = () => {\n    console.log(time, arraysLists); // setTempo(200)\n\n    time = 200; // loopCounter = 0\n  };\n\n  const stopBtn = () => {// keepGoing = false;\n    // playInProgress = false\n  };\n\n  const handleChange = e => {\n    let value = document.getElementById('tempoRange').value;\n    time = value;\n  };\n\n  const enableBtn = () => {\n    tempoBtn.current.disabled = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SongList, {\n        notes: notes,\n        setNotes: setNotes,\n        arraysLists: arraysLists,\n        instrumentLists: instrumentLists,\n        noteLength: noteLength,\n        setCopyArraysLists: setCopyArraysLists,\n        setCopyNoteLength: setCopyNoteLength,\n        setCopyInstrumentLists: setCopyInstrumentLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), notes && /*#__PURE__*/_jsxDEV(MusicMakerContainer, {\n        notes: notes,\n        arraysLists: arraysLists,\n        instrumentLists: instrumentLists,\n        playSong: playSong,\n        noteLength: noteLength,\n        stopBtn: stopBtn,\n        time: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"tempoRange\",\n        placeholder: \"100\",\n        onChange: enableBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: tempoBtn,\n        onClick: handleChange,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), time, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => playHandler(),\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopHander,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"V9jgdEwfcrmhmJzE5ijK7g3UzzI=\", false, function () {\n  return [useGlobal, useGlobal, useGlobal, useGlobal, useGlobal];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["setGlobal","addCallback","useState","useGlobal","useRef","React","useEffect","axios","Navbar","SongList","MusicMakerContainer","App","AudioContext","window","webkitAudioContext","audioCtx","numberOfColumns","notes","setNotes","noteLength","setNoteLength","songName","setSongName","token","setToken","newSong","setNewSong","copyArraysLists","setCopyArraysLists","copyNoteLength","setCopyNoteLength","copyInstrumentLists","setCopyInstrumentLists","dummyState","setDummyState","notesArray","instrument","keepGoing","time","tempoBtn","setNullInArrays","counter","current","disabled","i","note","newNote","name","img","push","newNoteLength","length","arraysLists","playList0","playList1","playList2","playList3","playList4","playList5","playList6","playList7","soundTypeList0","soundTypeList1","soundTypeList2","soundTypeList3","soundTypeList4","soundTypeList5","soundTypeList6","soundTypeList7","instrumentLists","loopCounter","updateNoteDuration","nonStateNewsong","playHandler","playInProgress","playSong","stopHander","scrollToTarget","undefined","Audio","play","setTimeout","noteSection","document","getElementById","distance","startTime","requestId","loop","currentTime","percent","Math","min","scrollTo","requestAnimationFrame","cancelAnimationFrame","logIt","console","log","stopBtn","handleChange","e","value","enableBtn"],"sources":["C:/Users/matth/Documents/Dev/MarioMusic/Mario-Music-MERN/ui/src/App.js"],"sourcesContent":["import { setGlobal, addCallback, useState, useGlobal, useRef } from 'reactn'\nimport React, { useEffect } from 'react'\nimport axios from \"axios\"\n\nimport Navbar from \"./components/Navbar\";\nimport SongList from './components/SongList';\nimport MusicMakerContainer from \"./components/MusicMakerContainer\";\n\n\nfunction App() {\n  //Fixes audio delay in Safari \n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioCtx = new AudioContext();\n\n  const numberOfColumns = 200\n  const [notes, setNotes ] = useGlobal([])  \n  const [noteLength, setNoteLength] = useState([])\n\n  const [songName, setSongName] = useGlobal(\"songName\")\n  const [token, setToken] = useGlobal(\"token\")\n  const [newSong, setNewSong] = useGlobal(\"newSong\")\n  const [copyArraysLists, setCopyArraysLists] = useGlobal(\"copyArraysLists\")\n  const [copyNoteLength, setCopyNoteLength] = useState(\"copyNoteLength\")\n  const [copyInstrumentLists, setCopyInstrumentLists] = useState(\"copyInstrumentLists\")\n\n  const [dummyState, setDummyState] = useState(\"test\")\n\n  let notesArray = []\n  let instrument = 'piano'\n\n  let keepGoing = true\n\n  let time = 100\n\n  const tempoBtn = useRef('')\n\n\n  // let halfNoteTempo =  120000 / tempo\n  // let quarterNoteTempo = 60000 / tempo\n  // let eighthNoteTempo = 30000 / tempo\n  // let sixteenthNoteTempo = 15000 / tempo\n\n \n\n  useEffect(() => { \n    setNullInArrays()\n  })\n\n  let counter = 0\n\n  useEffect(() => {\n    setNewSong(false)\n\n    tempoBtn.current.disabled = true\n    for (let i=1; i < numberOfColumns +1; i++) {\n\n      // setNotes(notes => [...notes, ...notesArray])\n      counter += 1\n      if (counter === 9) counter = 1\n\n      let note = 'C'\n      if (counter === 1) note = 'CHigh'\n      else if (counter === 2) note ='B'\n      else if (counter === 3) note ='A'\n      else if (counter === 4) note ='G'\n      else if (counter === 5) note ='F'\n      else if (counter === 6) note ='E'\n      else if (counter === 7) note ='D'\n      else if (counter === 8) note ='C'\n      \n\n      // counter += 1\n      // if (counter === 15) counter = 1\n\n      // let note = 'C'\n      // if (counter === 1) note = 'CHighSharp'\n      // else if (counter === 2) note = 'CHigh'\n      // else if (counter === 3) note ='B'\n      // else if (counter === 4) note ='ASharp'\n      // else if (counter === 5) note ='A'\n      // else if (counter === 6) note ='GSharp'\n      // else if (counter === 7) note ='G'\n      // else if (counter === 8) note ='FSharp'\n      // else if (counter === 9) note ='F'\n      // else if (counter === 10) note ='E'\n      // else if (counter === 11) note ='DSharp'\n      // else if (counter === 12) note ='D'\n      // else if (counter === 13) note ='CSharp'\n      // else if (counter === 14) note ='C'\n\n\n\n\n\n      let newNote = {\n        name: note,\n        img: './images/note.gif',\n        instrument: 'piano'\n      }\n      notesArray.push(newNote)\n      setNotes(notesArray)\n\n      let newNoteLength = {\n        length: 1000,\n        name: '1/4'\n      }\n      if (counter % 8 === 0) noteLength.push(newNoteLength)\n\n      \n    }\n    setCopyArraysLists(arraysLists)\n    setCopyNoteLength(noteLength)\n    setCopyInstrumentLists(instrument)\n\n  }, [])\n\n\n  let playList0 = []\n  let playList1 = []\n  let playList2 = []\n  let playList3 = []\n  let playList4 = []\n  let playList5 = []\n  let playList6 = []\n  let playList7 = []\n  let soundTypeList0 = []\n  let soundTypeList1 = []\n  let soundTypeList2 = []\n  let soundTypeList3 = []   \n  let soundTypeList4 = []   \n  let soundTypeList5 = []   \n  let soundTypeList6 = []   \n  let soundTypeList7 = []  \n\n  let arraysLists =[\n    playList0, playList1, playList2, playList3, playList4, playList5, playList6, playList7\n  ]\n\n  let instrumentLists = [\n    soundTypeList0, soundTypeList1, soundTypeList2, soundTypeList3, soundTypeList4, soundTypeList5, soundTypeList6, soundTypeList7\n  ]\n\n  const setNullInArrays = () => {\n    for (let i=0; i<numberOfColumns; i++){\n      playList0.push(null)\n      playList1.push(null)\n      playList2.push(null)\n      playList3.push(null)\n      playList4.push(null)\n      playList5.push(null)\n      playList6.push(null)\n      playList7.push(null)\n    }\n  }\n\n  let loopCounter = 0\n\n\n  // let halfNoteTempo =  120000 / tempo\n  // let quarterNoteTempo = 60000 / tempo\n  // let eighthNoteTempo = 30000 / tempo\n  // let sixteenthNoteTempo = 15000 / tempo\n\n\n  const updateNoteDuration = (loopCounter) => {\n\n      // get the note length from object and adjust to tempo\n      if (copyNoteLength[loopCounter].name === '1/4') {\n        return 60000 / time \n      }\n      else if (copyNoteLength[loopCounter].name === '1/8') {\n        return 30000 / time \n      }\n      else if (copyNoteLength[loopCounter].name === '1/16') {\n        return 15000 / time \n      }\n      else if (copyNoteLength[loopCounter].name === '1/2') {\n        return 120000 / time\n      }\n  }\n\n  let nonStateNewsong = false\n\n  const playHandler = () => {\n    nonStateNewsong = newSong\n    keepGoing = true\n    playInProgress = true\n\n    // handles loading in a song\n    if (nonStateNewsong === true){\n      nonStateNewsong = false\n      // setNewSong(false)\n      arraysLists = copyArraysLists\n      instrumentLists = copyInstrumentLists\n\n      playList0 = arraysLists[0]\n      playList1 = arraysLists[1]\n      playList2 = arraysLists[2]\n      playList3 = arraysLists[3]\n      playList4 = arraysLists[4]\n      playList5 = arraysLists[5]\n      playList6 = arraysLists[6]\n      playList7 = arraysLists[7]  \n    }\n\n    playSong()\n  }\n\n  const stopHander = () => {\n    keepGoing = false;\n    playInProgress = false\n    loopCounter = 0\n  }\n\n  // State causes problem with this funciton. Due to the callback of this function on itself, \n  // state would que with its original values, thus there are varaibles that are non state versions\n  const playSong = () => {\n  \n    // used to show how state breaks the function. Comment it in and the app will be full of bugs such as the stop button no longer working\n    // setDummyState('change')\n\n    if(keepGoing) {\n      scrollToTarget(loopCounter)\n\n      if (playList0[loopCounter] === undefined){}\n      else {\n        new Audio(`./sounds/${instrumentLists[0][loopCounter]}/${playList0[loopCounter]}${instrumentLists[0][loopCounter]}.mp3`).play()\n        // new Audio(`./sounds/beep/Cbeep.mp3`).play()\n        // gsap.to(\"#note1\", {y: \"-1rem\", ease: \"none\", duration: .3})\n        // gsap.to(\"#note1\", {delay: .3, y: \"-0rem\", ease: \"none\", duration: .3})\n      }\n\n      if (playList1[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[1][loopCounter]}/${playList1[loopCounter]}${instrumentLists[1][loopCounter]}.mp3`).play()}\n\n      if (playList2[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[2][loopCounter]}/${playList2[loopCounter]}${instrumentLists[2][loopCounter]}.mp3`).play()}\n\n      if (playList3[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[3][loopCounter]}/${playList3[loopCounter]}${instrumentLists[3][loopCounter]}.mp3`).play()}\n\n      if (playList4[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[4][loopCounter]}/${playList4[loopCounter]}${instrumentLists[4][loopCounter]}.mp3`).play()}\n\n      if (playList5[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[5][loopCounter]}/${playList5[loopCounter]}${instrumentLists[5][loopCounter]}.mp3`).play()}\n\n      if (playList6[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[6][loopCounter]}/${playList6[loopCounter]}${instrumentLists[6][loopCounter]}.mp3`).play()}\n\n      if (playList7[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[7][loopCounter]}/${playList7[loopCounter]}${instrumentLists[7][loopCounter]}.mp3`).play()}\n      \n      loopCounter += 1\n    }\n    else{\n      loopCounter = 0\n    }\n\n    if (keepGoing){\n      // Function Calls itself to repeat playlist\n      setTimeout(playSong, updateNoteDuration(loopCounter -1));\n    }\n\n\n  }\n\n\n\n  let noteSection = document.getElementById('noteSection')\n\n  let distance = -40\n  let playInProgress = false\n\n  const scrollToTarget = (loopCounter) => {\n    distance += 40\n    playInProgress = true\n    let startTime = null;\n    let requestId;\n    \n    const loop = function (currentTime) {\n        if (!startTime) {\n            startTime = currentTime;\n        }\n\n        // Elapsed time in miliseconds\n        let time = currentTime - startTime;\n\n        let percent = Math.min(time / updateNoteDuration(loopCounter));\n        // console.log(noteLength[durationCounter], 'counter', durationCounter)s\n\n        // noteSection.scrollTo(startPos + diff * percent, 0);\n        noteSection.scrollTo(distance + 40 * percent, 0);\n\n        if (time < updateNoteDuration(loopCounter) && playInProgress === true) {\n            // Continue moving\n            requestId = window.requestAnimationFrame(loop);\n\n        } \n        else if (!playInProgress)  {\n            window.cancelAnimationFrame(requestId);\n            noteSection.scrollTo(0, 0)\n            distance = -40\n            // percent = 0\n        }\n    };\n    requestId = window.requestAnimationFrame(loop);\n  }\n\n\n  const logIt = () => {\n    console.log(time, arraysLists)\n    // setTempo(200)\n    time = 200\n    // loopCounter = 0\n  }\n\n \n  const stopBtn = () => {\n\n    // keepGoing = false;\n    // playInProgress = false\n\n  }\n\n  const handleChange = (e) =>\n  {\n    let value = document.getElementById('tempoRange').value\n    time = value\n\n  }\n\n  const enableBtn = () => {\n    tempoBtn.current.disabled = false\n  }\n\n  \n    return (\n      <>\n      <div className=\"App\">\n        <Navbar />\n\n        {/* <button onClick={logIt}>LOG IT</button> */}\n        <SongList notes={notes} setNotes={setNotes} arraysLists={arraysLists} instrumentLists={instrumentLists} noteLength={noteLength} setCopyArraysLists={setCopyArraysLists} setCopyNoteLength={setCopyNoteLength} setCopyInstrumentLists={setCopyInstrumentLists}/>\n\n        {notes && <MusicMakerContainer  notes={notes} arraysLists={arraysLists} instrumentLists={instrumentLists} playSong={playSong} noteLength={noteLength} stopBtn={stopBtn} time={time}/> }\n        <br></br>             \n   \n        {/* <input value={timeState} onChange={handleChange}/> */}\n        <input id=\"tempoRange\" placeholder='100' onChange={enableBtn}/>\n        <button ref={tempoBtn} onClick={handleChange}>submit</button>\n        {time}\n        <button onClick={()=> playHandler()}>Play</button>  <button onClick={stopHander}>stop</button> \n        \n        \n      </div>\n\n      </>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}