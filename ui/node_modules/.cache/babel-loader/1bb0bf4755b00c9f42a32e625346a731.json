{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Documents\\\\Dev\\\\MarioMusic\\\\Mario-Music-MERN\\\\ui\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { setGlobal, addCallback, useState, useGlobal } from 'reactn';\nimport React, { useEffect } from 'react';\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport SongList from './components/SongList';\nimport MusicMakerContainer from \"./components/MusicMakerContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Fixes audio delay in Safari \n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioCtx = new AudioContext();\n  const numberOfColumns = 200;\n  const [notes, setNotes] = useGlobal([]);\n  const [noteLength, setNoteLength] = useState([]);\n  const [token, setToken] = useGlobal(\"token\");\n  const [newSong, setNewSong] = useGlobal(\"newSong\");\n  const [copyArraysLists, setCopyArraysLists] = useGlobal(\"copyArraysLists\");\n  const [copyNoteLength, setCopyNoteLength] = useState(\"copyNoteLength\");\n  const [copyInstrumentLists, setCopyInstrumentLists] = useState(\"copyInstrumentLists\");\n  const [tempo, setTempo] = useState(100);\n  const [timeState, setTimeState] = useState(100);\n  let notesArray = [];\n  let instrument = 'piano';\n  let keepGoing = true; // let time = 100\n\n  const [stateTime, useStateTime] = useGlobal(\"stateTime\"); // let halfNoteTempo =  120000 / tempo\n  // let quarterNoteTempo = 60000 / tempo\n  // let eighthNoteTempo = 30000 / tempo\n  // let sixteenthNoteTempo = 15000 / tempo\n\n  useEffect(() => {\n    setNullInArrays();\n  });\n  let counter = 0;\n  useEffect(() => {\n    setNewSong(false);\n\n    for (let i = 1; i < numberOfColumns + 1; i++) {\n      // setNotes(notes => [...notes, ...notesArray])\n      counter += 1;\n      if (counter === 9) counter = 1;\n      let note = 'C';\n      if (counter === 1) note = 'CHigh';else if (counter === 2) note = 'B';else if (counter === 3) note = 'A';else if (counter === 4) note = 'G';else if (counter === 5) note = 'F';else if (counter === 6) note = 'E';else if (counter === 7) note = 'D';else if (counter === 8) note = 'C';\n      let newNote = {\n        name: note,\n        img: './images/note.gif',\n        instrument: 'piano'\n      };\n      notesArray.push(newNote);\n      setNotes(notesArray);\n      let newNoteLength = {\n        length: 1000,\n        name: '1/4'\n      };\n      if (counter % 8 === 0) noteLength.push(newNoteLength);\n    }\n\n    setCopyArraysLists(arraysLists);\n    setCopyNoteLength(noteLength);\n    setCopyInstrumentLists(instrument);\n  }, []);\n  let playList0 = [];\n  let playList1 = [];\n  let playList2 = [];\n  let playList3 = [];\n  let playList4 = [];\n  let playList5 = [];\n  let playList6 = [];\n  let playList7 = [];\n  let soundTypeList0 = [];\n  let soundTypeList1 = [];\n  let soundTypeList2 = [];\n  let soundTypeList3 = [];\n  let soundTypeList4 = [];\n  let soundTypeList5 = [];\n  let soundTypeList6 = [];\n  let soundTypeList7 = [];\n  let arraysLists = [playList0, playList1, playList2, playList3, playList4, playList5, playList6, playList7];\n  let instrumentLists = [soundTypeList0, soundTypeList1, soundTypeList2, soundTypeList3, soundTypeList4, soundTypeList5, soundTypeList6, soundTypeList7];\n\n  const setNullInArrays = () => {\n    for (let i = 0; i < numberOfColumns; i++) {\n      playList0.push(null);\n      playList1.push(null);\n      playList2.push(null);\n      playList3.push(null);\n      playList4.push(null);\n      playList5.push(null);\n      playList6.push(null);\n      playList7.push(null);\n    }\n  };\n\n  let loopCounter = 0; // let halfNoteTempo =  120000 / tempo\n  // let quarterNoteTempo = 60000 / tempo\n  // let eighthNoteTempo = 30000 / tempo\n  // let sixteenthNoteTempo = 15000 / tempo\n\n  const updateNoteDuration = loopCounter => {\n    // get the note length from object and adjust to tempo\n    if (copyNoteLength[loopCounter].name === '1/4') {\n      return 60000 / stateTime;\n    } else if (copyNoteLength[loopCounter].name === '1/8') {\n      return 30000 / stateTime;\n    } else if (copyNoteLength[loopCounter].name === '1/16') {\n      return 15000 / stateTime;\n    } else if (copyNoteLength[loopCounter].name === '1/2') {\n      return 120000 / stateTime;\n    }\n  };\n\n  const playHandler = () => {\n    keepGoing = true;\n    playInProgress = true;\n    playSong();\n  };\n\n  const stopHander = () => {\n    keepGoing = false;\n    playInProgress = false;\n    loopCounter = 0;\n  };\n\n  const playSong = () => {\n    // handles loading in a song\n    if (newSong === true) {\n      setNewSong(false);\n      arraysLists = copyArraysLists;\n      instrumentLists = copyInstrumentLists;\n      setNoteLength(copyNoteLength);\n      playList0 = arraysLists[0];\n      playList1 = arraysLists[1];\n      playList2 = arraysLists[2];\n      playList3 = arraysLists[3];\n      playList4 = arraysLists[4];\n      playList5 = arraysLists[5];\n      playList6 = arraysLists[6];\n      playList7 = arraysLists[7];\n    } else {\n      setCopyNoteLength(noteLength);\n    }\n\n    if (keepGoing) {\n      scrollToTarget(loopCounter);\n\n      if (playList0[loopCounter] === undefined) {} else {\n        console.log(\"HERE\", updateNoteDuration(loopCounter));\n        new Audio(`./sounds/${instrumentLists[0][loopCounter]}/${playList0[loopCounter]}${instrumentLists[0][loopCounter]}.mp3`).play(); // new Audio(`./sounds/beep/Cbeep.mp3`).play()\n\n        console.log(`./sounds/${instrumentLists[0][loopCounter]}/${playList0[loopCounter]}${instrumentLists[0][loopCounter]}.mp3`);\n        console.log('conter', loopCounter);\n        console.log('playlist', playList0);\n        console.log(\"log\", playList0[loopCounter]); // gsap.to(\"#note1\", {y: \"-1rem\", ease: \"none\", duration: .3})\n        // gsap.to(\"#note1\", {delay: .3, y: \"-0rem\", ease: \"none\", duration: .3})\n      }\n\n      if (playList1[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[1][loopCounter]}/${playList1[loopCounter]}${instrumentLists[1][loopCounter]}.mp3`).play();\n      }\n\n      if (playList2[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[2][loopCounter]}/${playList2[loopCounter]}${instrumentLists[2][loopCounter]}.mp3`).play();\n      }\n\n      if (playList3[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[3][loopCounter]}/${playList3[loopCounter]}${instrumentLists[3][loopCounter]}.mp3`).play();\n      }\n\n      if (playList4[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[4][loopCounter]}/${playList4[loopCounter]}${instrumentLists[4][loopCounter]}.mp3`).play();\n      }\n\n      if (playList5[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[5][loopCounter]}/${playList5[loopCounter]}${instrumentLists[5][loopCounter]}.mp3`).play();\n      }\n\n      if (playList6[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[6][loopCounter]}/${playList6[loopCounter]}${instrumentLists[6][loopCounter]}.mp3`).play();\n      }\n\n      if (playList7[loopCounter] === undefined) {} else {\n        new Audio(`./sounds/${instrumentLists[7][loopCounter]}/${playList7[loopCounter]}${instrumentLists[7][loopCounter]}.mp3`).play();\n      }\n\n      loopCounter += 1;\n    } else {\n      loopCounter = 0;\n    }\n\n    if (keepGoing) {\n      // Function Calls itself to repeat playlist\n      setTimeout(playSong, updateNoteDuration(loopCounter - 1));\n    }\n  };\n\n  let noteSection = document.getElementById('noteSection');\n  let distance = -40;\n  let playInProgress = false;\n\n  const scrollToTarget = loopCounter => {\n    distance += 40;\n    playInProgress = true;\n    let startTime = null;\n    let requestId;\n\n    const loop = function (currentTime) {\n      if (!startTime) {\n        startTime = currentTime;\n      } // Elapsed time in miliseconds\n\n\n      let time = currentTime - startTime;\n      let percent = Math.min(time / updateNoteDuration(loopCounter)); // console.log(noteLength[durationCounter], 'counter', durationCounter)s\n      // noteSection.scrollTo(startPos + diff * percent, 0);\n\n      noteSection.scrollTo(distance + 40 * percent, 0);\n\n      if (time < updateNoteDuration(loopCounter) && playInProgress === true) {\n        // Continue moving\n        requestId = window.requestAnimationFrame(loop);\n      } else if (!playInProgress) {\n        window.cancelAnimationFrame(requestId);\n        noteSection.scrollTo(0, 0);\n        distance = -40; // percent = 0\n      }\n    };\n\n    requestId = window.requestAnimationFrame(loop);\n  };\n\n  const logIt = () => {// loopCounter = 0\n  };\n\n  const stopBtn = () => {// keepGoing = false;\n    // playInProgress = false\n  };\n\n  const handleChange = e => {// let x = document.getElementById('tempoRange').value\n    // time = x\n    // alert(x)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logIt,\n      children: \"LOG IT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SongList, {\n      notes: notes,\n      setNotes: setNotes,\n      arraysLists: arraysLists,\n      instrumentLists: instrumentLists,\n      noteLength: noteLength,\n      setCopyArraysLists: setCopyArraysLists,\n      setCopyNoteLength: setCopyNoteLength,\n      setCopyInstrumentLists: setCopyInstrumentLists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), notes && /*#__PURE__*/_jsxDEV(MusicMakerContainer, {\n      notes: notes,\n      arraysLists: arraysLists,\n      instrumentLists: instrumentLists,\n      playSong: playSong,\n      noteLength: noteLength,\n      stopBtn: stopBtn,\n      tempo: tempo,\n      setTempo: setTempo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), \"        \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 26\n    }, this), \"        \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 43\n    }, this), \"               \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 67\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChange,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => playHandler(),\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopHander,\n      children: \"stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 61\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"qcluGsbSFkXDsDyWvORrSlbvDak=\", false, function () {\n  return [useGlobal, useGlobal, useGlobal, useGlobal, useGlobal];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["setGlobal","addCallback","useState","useGlobal","React","useEffect","axios","Navbar","SongList","MusicMakerContainer","App","AudioContext","window","webkitAudioContext","audioCtx","numberOfColumns","notes","setNotes","noteLength","setNoteLength","token","setToken","newSong","setNewSong","copyArraysLists","setCopyArraysLists","copyNoteLength","setCopyNoteLength","copyInstrumentLists","setCopyInstrumentLists","tempo","setTempo","timeState","setTimeState","notesArray","instrument","keepGoing","stateTime","useStateTime","setNullInArrays","counter","i","note","newNote","name","img","push","newNoteLength","length","arraysLists","playList0","playList1","playList2","playList3","playList4","playList5","playList6","playList7","soundTypeList0","soundTypeList1","soundTypeList2","soundTypeList3","soundTypeList4","soundTypeList5","soundTypeList6","soundTypeList7","instrumentLists","loopCounter","updateNoteDuration","playHandler","playInProgress","playSong","stopHander","scrollToTarget","undefined","console","log","Audio","play","setTimeout","noteSection","document","getElementById","distance","startTime","requestId","loop","currentTime","time","percent","Math","min","scrollTo","requestAnimationFrame","cancelAnimationFrame","logIt","stopBtn","handleChange","e"],"sources":["C:/Users/matth/Documents/Dev/MarioMusic/Mario-Music-MERN/ui/src/App.js"],"sourcesContent":["import { setGlobal, addCallback, useState, useGlobal } from 'reactn'\nimport React, { useEffect } from 'react'\nimport axios from \"axios\"\n\nimport Navbar from \"./components/Navbar\";\nimport SongList from './components/SongList';\nimport MusicMakerContainer from \"./components/MusicMakerContainer\";\n\n\nfunction App() {\n  //Fixes audio delay in Safari \n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioCtx = new AudioContext();\n\n  const numberOfColumns = 200\n  const [notes, setNotes ] = useGlobal([])  \n  const [noteLength, setNoteLength] = useState([])\n\n  \n  const [token, setToken] = useGlobal(\"token\")\n  const [newSong, setNewSong] = useGlobal(\"newSong\")\n  const [copyArraysLists, setCopyArraysLists] = useGlobal(\"copyArraysLists\")\n  const [copyNoteLength, setCopyNoteLength] = useState(\"copyNoteLength\")\n  const [copyInstrumentLists, setCopyInstrumentLists] = useState(\"copyInstrumentLists\")\n  const [tempo, setTempo] = useState(100)\n  const [timeState, setTimeState] = useState(100)\n\n  let notesArray = []\n  let instrument = 'piano'\n\n  let keepGoing = true\n\n\n  // let time = 100\n  const [stateTime, useStateTime] = useGlobal(\"stateTime\")\n\n\n  // let halfNoteTempo =  120000 / tempo\n  // let quarterNoteTempo = 60000 / tempo\n  // let eighthNoteTempo = 30000 / tempo\n  // let sixteenthNoteTempo = 15000 / tempo\n\n \n\n  useEffect(() => { \n    setNullInArrays()\n  })\n\n  let counter = 0\n\n  useEffect(() => {\n    setNewSong(false)\n    for (let i=1; i < numberOfColumns +1; i++) {\n\n      // setNotes(notes => [...notes, ...notesArray])\n      counter += 1\n      if (counter === 9) counter = 1\n\n      let note = 'C'\n      if (counter === 1) note = 'CHigh'\n      else if (counter === 2) note ='B'\n      else if (counter === 3) note ='A'\n      else if (counter === 4) note ='G'\n      else if (counter === 5) note ='F'\n      else if (counter === 6) note ='E'\n      else if (counter === 7) note ='D'\n      else if (counter === 8) note ='C'\n      \n      let newNote = {\n        name: note,\n        img: './images/note.gif',\n        instrument: 'piano'\n      }\n      notesArray.push(newNote)\n      setNotes(notesArray)\n\n      let newNoteLength = {\n        length: 1000,\n        name: '1/4'\n      }\n      if (counter % 8 === 0) noteLength.push(newNoteLength)\n\n      \n    }\n    setCopyArraysLists(arraysLists)\n    setCopyNoteLength(noteLength)\n    setCopyInstrumentLists(instrument)\n\n  }, [])\n\n\n  let playList0 = []\n  let playList1 = []\n  let playList2 = []\n  let playList3 = []\n  let playList4 = []\n  let playList5 = []\n  let playList6 = []\n  let playList7 = []\n  let soundTypeList0 = []\n  let soundTypeList1 = []\n  let soundTypeList2 = []\n  let soundTypeList3 = []   \n  let soundTypeList4 = []   \n  let soundTypeList5 = []   \n  let soundTypeList6 = []   \n  let soundTypeList7 = []  \n\n  let arraysLists =[\n    playList0, playList1, playList2, playList3, playList4, playList5, playList6, playList7\n  ]\n\n  let instrumentLists = [\n    soundTypeList0, soundTypeList1, soundTypeList2, soundTypeList3, soundTypeList4, soundTypeList5, soundTypeList6, soundTypeList7\n  ]\n\n  const setNullInArrays = () => {\n    for (let i=0; i<numberOfColumns; i++){\n      playList0.push(null)\n      playList1.push(null)\n      playList2.push(null)\n      playList3.push(null)\n      playList4.push(null)\n      playList5.push(null)\n      playList6.push(null)\n      playList7.push(null)\n    }\n  }\n\n  let loopCounter = 0\n\n\n  // let halfNoteTempo =  120000 / tempo\n  // let quarterNoteTempo = 60000 / tempo\n  // let eighthNoteTempo = 30000 / tempo\n  // let sixteenthNoteTempo = 15000 / tempo\n\n\n  const updateNoteDuration = (loopCounter) => {\n\n\n      // get the note length from object and adjust to tempo\n      if (copyNoteLength[loopCounter].name === '1/4') {\n        return 60000 / stateTime \n      }\n      else if (copyNoteLength[loopCounter].name === '1/8') {\n        return 30000 / stateTime \n      }\n      else if (copyNoteLength[loopCounter].name === '1/16') {\n        return 15000 / stateTime \n      }\n      else if (copyNoteLength[loopCounter].name === '1/2') {\n        return 120000 / stateTime\n      }\n  }\n\n\n  const playHandler = () => {\n    keepGoing = true\n    playInProgress = true\n    playSong()\n  }\n\n  const stopHander = () => {\n    keepGoing = false;\n    playInProgress = false\n    loopCounter = 0\n  }\n\n\n  const playSong = () => {\n    \n\n\n    // handles loading in a song\n    if (newSong === true){\n\n      setNewSong(false)\n      arraysLists = copyArraysLists\n      instrumentLists = copyInstrumentLists\n      setNoteLength(copyNoteLength)\n\n      playList0 = arraysLists[0]\n      playList1 = arraysLists[1]\n      playList2 = arraysLists[2]\n      playList3 = arraysLists[3]\n      playList4 = arraysLists[4]\n      playList5 = arraysLists[5]\n      playList6 = arraysLists[6]\n      playList7 = arraysLists[7]  \n    }\n    else{\n      setCopyNoteLength(noteLength)\n    }\n\n    if(keepGoing) {\n      scrollToTarget(loopCounter)\n\n      if (playList0[loopCounter] === undefined){}\n      else {\n        console.log(\"HERE\", updateNoteDuration(loopCounter))\n        new Audio(`./sounds/${instrumentLists[0][loopCounter]}/${playList0[loopCounter]}${instrumentLists[0][loopCounter]}.mp3`).play()\n        // new Audio(`./sounds/beep/Cbeep.mp3`).play()\n\n        console.log(`./sounds/${instrumentLists[0][loopCounter]}/${playList0[loopCounter]}${instrumentLists[0][loopCounter]}.mp3`)\n        console.log('conter', loopCounter)\n        console.log('playlist', playList0)\n        console.log(\"log\", playList0[loopCounter])\n\n\n        // gsap.to(\"#note1\", {y: \"-1rem\", ease: \"none\", duration: .3})\n        // gsap.to(\"#note1\", {delay: .3, y: \"-0rem\", ease: \"none\", duration: .3})\n      }\n\n      if (playList1[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[1][loopCounter]}/${playList1[loopCounter]}${instrumentLists[1][loopCounter]}.mp3`).play()}\n\n      if (playList2[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[2][loopCounter]}/${playList2[loopCounter]}${instrumentLists[2][loopCounter]}.mp3`).play()}\n\n      if (playList3[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[3][loopCounter]}/${playList3[loopCounter]}${instrumentLists[3][loopCounter]}.mp3`).play()}\n\n      if (playList4[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[4][loopCounter]}/${playList4[loopCounter]}${instrumentLists[4][loopCounter]}.mp3`).play()}\n\n      if (playList5[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[5][loopCounter]}/${playList5[loopCounter]}${instrumentLists[5][loopCounter]}.mp3`).play()}\n\n      if (playList6[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[6][loopCounter]}/${playList6[loopCounter]}${instrumentLists[6][loopCounter]}.mp3`).play()}\n\n      if (playList7[loopCounter] === undefined){}\n      else {new Audio(`./sounds/${instrumentLists[7][loopCounter]}/${playList7[loopCounter]}${instrumentLists[7][loopCounter]}.mp3`).play()}\n      \n      loopCounter += 1\n    }\n    else{\n      loopCounter = 0\n    }\n\n    if (keepGoing){\n      // Function Calls itself to repeat playlist\n      setTimeout(playSong, updateNoteDuration(loopCounter -1));\n    }\n\n\n  }\n\n\n\n  let noteSection = document.getElementById('noteSection')\n\n  let distance = -40\n  let playInProgress = false\n\n  const scrollToTarget = (loopCounter) => {\n    distance += 40\n    playInProgress = true\n    let startTime = null;\n    let requestId;\n    \n    const loop = function (currentTime) {\n        if (!startTime) {\n            startTime = currentTime;\n        }\n\n        // Elapsed time in miliseconds\n        let time = currentTime - startTime;\n\n        let percent = Math.min(time / updateNoteDuration(loopCounter));\n        // console.log(noteLength[durationCounter], 'counter', durationCounter)s\n\n        // noteSection.scrollTo(startPos + diff * percent, 0);\n        noteSection.scrollTo(distance + 40 * percent, 0);\n\n        if (time < updateNoteDuration(loopCounter) && playInProgress === true) {\n            // Continue moving\n            requestId = window.requestAnimationFrame(loop);\n\n        } \n        else if (!playInProgress)  {\n            window.cancelAnimationFrame(requestId);\n            noteSection.scrollTo(0, 0)\n            distance = -40\n            // percent = 0\n        }\n    };\n    requestId = window.requestAnimationFrame(loop);\n  }\n\n\n  const logIt = () => {\n\n    // loopCounter = 0\n  }\n\n \n  const stopBtn = () => {\n\n    // keepGoing = false;\n    // playInProgress = false\n\n  }\n\n  const handleChange = (e) =>\n  {\n    // let x = document.getElementById('tempoRange').value\n    // time = x\n    // alert(x)\n  }\n\n  \n    return (\n  \n      <div className=\"App\">\n        <Navbar />\n\n        <button onClick={logIt}>LOG IT</button>\n        <SongList notes={notes} setNotes={setNotes} arraysLists={arraysLists} instrumentLists={instrumentLists} noteLength={noteLength} setCopyArraysLists={setCopyArraysLists} setCopyNoteLength={setCopyNoteLength} setCopyInstrumentLists={setCopyInstrumentLists}/>\n\n        {notes && <MusicMakerContainer  notes={notes} arraysLists={arraysLists} instrumentLists={instrumentLists} playSong={playSong} noteLength={noteLength} stopBtn={stopBtn} tempo={tempo} setTempo={setTempo}/> }\n        <br></br>        <br></br>        <br></br>               <br></br>           \n   \n   \n        {/* <input id=\"tempoRange\" min='50' max=\"250\"  placeholder='100'/> */}\n        <button onClick={handleChange}>submit</button>\n        <button onClick={()=> playHandler()}>Play</button>  <button onClick={stopHander}>stop</button> \n      \n      </div>\n\n\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}