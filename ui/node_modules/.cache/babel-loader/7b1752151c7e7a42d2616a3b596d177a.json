{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Documents\\\\Dev\\\\MarioMusic\\\\ui\\\\src\\\\components\\\\Note.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useGlobal } from 'reactn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  _s();\n\n  let {\n    notes,\n    note,\n    index,\n    column,\n    arraysLists,\n    instrumentLists\n  } = _ref;\n  const [currentInstrument, setCurrentInstrument] = useGlobal(\"currentInstrument\");\n  const [refresh, setRefresh] = useState('');\n  const [erasing, setErasing] = useGlobal('erasing');\n\n  const hearNote = () => {\n    if (erasing) new Audio(`./sounds/eraser/eraser.mp3`).play();else new Audio(`./sounds/${currentInstrument}/${note.name}${currentInstrument}.mp3`).play();\n    addNoteToArray();\n    changeNoteImage();\n    setRefresh(\"refresh\");\n  };\n\n  const changeNoteImage = () => {\n    notes[index].img = `./images/${currentInstrument}.gif`;\n  };\n\n  const addNoteToArray = () => {\n    if (arraysLists[6][column] !== null) {\n      arraysLists[7][column] = note.name;\n      instrumentLists[7][column] = currentInstrument;\n    } else if (arraysLists[5][column] !== null) {\n      arraysLists[6][column] = note.name;\n      instrumentLists[6][column] = currentInstrument;\n    } else if (arraysLists[4][column] !== null) {\n      arraysLists[5][column] = note.name;\n      instrumentLists[5][column] = currentInstrument;\n    } else if (arraysLists[3][column] !== null) {\n      arraysLists[4][column] = note.name;\n      instrumentLists[4][column] = currentInstrument;\n    } else if (arraysLists[2][column] !== null) {\n      arraysLists[3][column] = note.name;\n      instrumentLists[3][column] = currentInstrument;\n    } else if (arraysLists[1][column] !== null) {\n      arraysLists[2][column] = note.name;\n      instrumentLists[2][column] = currentInstrument;\n    } else if (arraysLists[0][column] !== null) {\n      note.instrument = currentInstrument;\n      arraysLists[1][column] = note.name;\n      instrumentLists[1][column] = currentInstrument;\n    } else {\n      note.instrument = currentInstrument;\n      arraysLists[0][column] = note.name;\n      instrumentLists[0][column] = note.instrument; // note.instrument = currnetInstrument\n    } // console.log('playList1', arraysLists[0])\n\n\n    console.log(\"PlayListArray\", arraysLists); // console.log(\"Instra list\", instrumentLists)\n    // console.log(\"current Inst\", currentInstrument)\n  }; // const addNoteToArray = () => {\n  //   console.log('new', note.img)\n  //   console.log(\"erasing\", erasing)\n  //   // stops improper layering of notes\n  //   if (note.img === './images/note.gif' ){\n  //     // adds note to right array checking higher numbers first\n  //     if (arraysLists[6][column] !== null) {\n  //       if (erasing) {\n  //         arraysLists[7][column] = null\n  //         instrumentLists[7][column] = null\n  //       }\n  //       else{\n  //         note.instrument = currentInstrument\n  //         arraysLists[7][column] = note.name\n  //         instrumentLists[7][column] = currentInstrument\n  //       }\n  //     }\n  //     else if (arraysLists[5][column] !== null) {\n  //       if (erasing) {\n  //         arraysLists[6][column] = null\n  //         instrumentLists[6][column] = null\n  //       }\n  //       else{\n  //         note.instrument = currentInstrument\n  //         arraysLists[6][column] = note.name\n  //         instrumentLists[6][column] = currentInstrument\n  //       }\n  //     }\n  //     else if (arraysLists[4][column] !== null) {\n  //       if (erasing) {\n  //         arraysLists[5][column] = null\n  //         instrumentLists[5][column] = null\n  //       }\n  //       else{\n  //         note.instrument = currentInstrument\n  //         arraysLists[5][column] = note.name\n  //         instrumentLists[5][column] = currentInstrument \n  //       }\n  //     }\n  //     else if (arraysLists[3][column] !== null) {\n  //       if (erasing) {\n  //         arraysLists[4][column] = null\n  //         instrumentLists[4][column] = null\n  //       }\n  //       else{\n  //         note.instrument = currentInstrument\n  //         arraysLists[4][column] = note.name\n  //         instrumentLists[4][column] = currentInstrument\n  //       }\n  //     }\n  //     else if (arraysLists[2][column] !== null) {\n  //       if (erasing) {\n  //         arraysLists[3][column] = null\n  //         instrumentLists[3][column] = null\n  //       }\n  //       else{\n  //         note.instrument = currentInstrument\n  //         arraysLists[3][column] = note.name\n  //         instrumentLists[3][column] = currentInstrument\n  //       }\n  //     }\n  //     else if (arraysLists[1][column] !== null) {\n  //       if (erasing) {\n  //         arraysLists[2][column] = null\n  //         instrumentLists[2][column] = null\n  //       }\n  //       else{\n  //         note.instrument = currentInstrument\n  //         arraysLists[2][column] = note.name\n  //         instrumentLists[2][column] = currentInstrument\n  //       }\n  //     }\n  //     else if (arraysLists[0][column] !== null) {\n  //       if (erasing) {\n  //         alert(\"erasing 2\")\n  //         arraysLists[1][column] = null\n  //         instrumentLists[1][column] = null\n  //       }\n  //       else{\n  //         note.instrument = currentInstrument\n  //         arraysLists[1][column] = note.name\n  //         instrumentLists[1][column] = currentInstrument\n  //       }\n  //     }\n  //     else {\n  //       // alert('here')\n  //       if (erasing === true) {\n  //         // alert(\"hmm\")\n  //         arraysLists[0][column] = null\n  //         instrumentLists[0][column] = null\n  //       }\n  //       else {\n  //         note.instrument = currentInstrument\n  //         arraysLists[0][column] = note.name\n  //         instrumentLists[0][column] = note.instrument\n  //       }\n  //     }\n  //   }\n  //   // console.log(\"notes\", notes)\n  //   console.log('arrayLists',arraysLists)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: `note${index}`,\n      className: `note column${column}`,\n      src: note.img,\n      onClick: () => hearNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Note, \"mVS+j8yvEHvADY081VFqwNXhTuQ=\", false, function () {\n  return [useGlobal, useGlobal];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["useState","useGlobal","Note","notes","note","index","column","arraysLists","instrumentLists","currentInstrument","setCurrentInstrument","refresh","setRefresh","erasing","setErasing","hearNote","Audio","play","name","addNoteToArray","changeNoteImage","img","instrument","console","log"],"sources":["C:/Users/matth/Documents/Dev/MarioMusic/ui/src/components/Note.jsx"],"sourcesContent":["import { useState, useGlobal } from 'reactn'\r\n\r\n\r\nconst Note = ({ notes, note, index, column, arraysLists, instrumentLists } ) => {\r\n  const [currentInstrument, setCurrentInstrument ] = useGlobal(\"currentInstrument\")\r\n  const [refresh, setRefresh ] = useState('')\r\n  const [erasing, setErasing] = useGlobal('erasing')\r\n\r\n  const hearNote = () => {\r\n    if (erasing) new Audio(`./sounds/eraser/eraser.mp3`).play()\r\n    else new Audio(`./sounds/${currentInstrument}/${note.name}${currentInstrument}.mp3`).play()\r\n\r\n    addNoteToArray()\r\n    changeNoteImage()\r\n    setRefresh(\"refresh\")\r\n  }\r\n\r\n  const changeNoteImage = () => {\r\n    notes[index].img = `./images/${currentInstrument}.gif`\r\n\r\n  }\r\n  const addNoteToArray = () => {\r\n    \r\n    if (arraysLists[6][column] !== null) {\r\n      arraysLists[7][column] = note.name\r\n      instrumentLists[7][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[5][column] !== null) {\r\n      arraysLists[6][column] = note.name\r\n      instrumentLists[6][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[4][column] !== null) {\r\n      arraysLists[5][column] = note.name\r\n      instrumentLists[5][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[3][column] !== null) {\r\n      arraysLists[4][column] = note.name\r\n      instrumentLists[4][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[2][column] !== null) {\r\n      arraysLists[3][column] = note.name\r\n      instrumentLists[3][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[1][column] !== null) {\r\n      arraysLists[2][column] = note.name\r\n      instrumentLists[2][column] = currentInstrument\r\n    }\r\n    else if (arraysLists[0][column] !== null) {\r\n      note.instrument = currentInstrument\r\n      arraysLists[1][column] = note.name\r\n      instrumentLists[1][column] = currentInstrument\r\n    }\r\n    else {\r\n      note.instrument = currentInstrument\r\n      arraysLists[0][column] = note.name\r\n      instrumentLists[0][column] = note.instrument\r\n      // note.instrument = currnetInstrument\r\n    }\r\n\r\n    // console.log('playList1', arraysLists[0])\r\n    console.log(\"PlayListArray\", arraysLists)\r\n    \r\n    // console.log(\"Instra list\", instrumentLists)\r\n    // console.log(\"current Inst\", currentInstrument)\r\n\r\n  \r\n  }\r\n  // const addNoteToArray = () => {\r\n  //   console.log('new', note.img)\r\n  //   console.log(\"erasing\", erasing)\r\n\r\n  //   // stops improper layering of notes\r\n  //   if (note.img === './images/note.gif' ){\r\n\r\n  //     // adds note to right array checking higher numbers first\r\n  //     if (arraysLists[6][column] !== null) {\r\n  //       if (erasing) {\r\n  //         arraysLists[7][column] = null\r\n  //         instrumentLists[7][column] = null\r\n  //       }\r\n  //       else{\r\n  //         note.instrument = currentInstrument\r\n  //         arraysLists[7][column] = note.name\r\n  //         instrumentLists[7][column] = currentInstrument\r\n  //       }\r\n  //     }\r\n  //     else if (arraysLists[5][column] !== null) {\r\n  //       if (erasing) {\r\n  //         arraysLists[6][column] = null\r\n  //         instrumentLists[6][column] = null\r\n  //       }\r\n  //       else{\r\n  //         note.instrument = currentInstrument\r\n  //         arraysLists[6][column] = note.name\r\n  //         instrumentLists[6][column] = currentInstrument\r\n  //       }\r\n  //     }\r\n  //     else if (arraysLists[4][column] !== null) {\r\n  //       if (erasing) {\r\n  //         arraysLists[5][column] = null\r\n  //         instrumentLists[5][column] = null\r\n  //       }\r\n  //       else{\r\n  //         note.instrument = currentInstrument\r\n  //         arraysLists[5][column] = note.name\r\n  //         instrumentLists[5][column] = currentInstrument \r\n  //       }\r\n\r\n  //     }\r\n  //     else if (arraysLists[3][column] !== null) {\r\n  //       if (erasing) {\r\n  //         arraysLists[4][column] = null\r\n  //         instrumentLists[4][column] = null\r\n  //       }\r\n  //       else{\r\n  //         note.instrument = currentInstrument\r\n  //         arraysLists[4][column] = note.name\r\n  //         instrumentLists[4][column] = currentInstrument\r\n  //       }\r\n  //     }\r\n  //     else if (arraysLists[2][column] !== null) {\r\n  //       if (erasing) {\r\n  //         arraysLists[3][column] = null\r\n  //         instrumentLists[3][column] = null\r\n  //       }\r\n  //       else{\r\n  //         note.instrument = currentInstrument\r\n  //         arraysLists[3][column] = note.name\r\n  //         instrumentLists[3][column] = currentInstrument\r\n  //       }\r\n  //     }\r\n  //     else if (arraysLists[1][column] !== null) {\r\n  //       if (erasing) {\r\n  //         arraysLists[2][column] = null\r\n  //         instrumentLists[2][column] = null\r\n  //       }\r\n  //       else{\r\n  //         note.instrument = currentInstrument\r\n  //         arraysLists[2][column] = note.name\r\n  //         instrumentLists[2][column] = currentInstrument\r\n  //       }\r\n  //     }\r\n  //     else if (arraysLists[0][column] !== null) {\r\n  //       if (erasing) {\r\n  //         alert(\"erasing 2\")\r\n  //         arraysLists[1][column] = null\r\n  //         instrumentLists[1][column] = null\r\n  //       }\r\n  //       else{\r\n  //         note.instrument = currentInstrument\r\n  //         arraysLists[1][column] = note.name\r\n  //         instrumentLists[1][column] = currentInstrument\r\n  //       }\r\n  //     }\r\n  //     else {\r\n  //       // alert('here')\r\n  //       if (erasing === true) {\r\n  //         // alert(\"hmm\")\r\n  //         arraysLists[0][column] = null\r\n  //         instrumentLists[0][column] = null\r\n  //       }\r\n  //       else {\r\n  //         note.instrument = currentInstrument\r\n  //         arraysLists[0][column] = note.name\r\n  //         instrumentLists[0][column] = note.instrument\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   // console.log(\"notes\", notes)\r\n  //   console.log('arrayLists',arraysLists)\r\n\r\n  // }\r\n  \r\n  return (\r\n    <>  \r\n        <img id={`note${index}`} className={`note column${column}`} src={note.img} onClick={() => hearNote()}/>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Note"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,QAApC;;;;AAGA,MAAMC,IAAI,GAAG,QAAmE;EAAA;;EAAA,IAAlE;IAAEC,KAAF;IAASC,IAAT;IAAeC,KAAf;IAAsBC,MAAtB;IAA8BC,WAA9B;IAA2CC;EAA3C,CAAkE;EAC9E,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA6CT,SAAS,CAAC,mBAAD,CAA5D;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBb,SAAS,CAAC,SAAD,CAAvC;;EAEA,MAAMc,QAAQ,GAAG,MAAM;IACrB,IAAIF,OAAJ,EAAa,IAAIG,KAAJ,CAAW,4BAAX,EAAwCC,IAAxC,GAAb,KACK,IAAID,KAAJ,CAAW,YAAWP,iBAAkB,IAAGL,IAAI,CAACc,IAAK,GAAET,iBAAkB,MAAzE,EAAgFQ,IAAhF;IAELE,cAAc;IACdC,eAAe;IACfR,UAAU,CAAC,SAAD,CAAV;EACD,CAPD;;EASA,MAAMQ,eAAe,GAAG,MAAM;IAC5BjB,KAAK,CAACE,KAAD,CAAL,CAAagB,GAAb,GAAoB,YAAWZ,iBAAkB,MAAjD;EAED,CAHD;;EAIA,MAAMU,cAAc,GAAG,MAAM;IAE3B,IAAIZ,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,MAA2B,IAA/B,EAAqC;MACnCC,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,IAAyBF,IAAI,CAACc,IAA9B;MACAV,eAAe,CAAC,CAAD,CAAf,CAAmBF,MAAnB,IAA6BG,iBAA7B;IACD,CAHD,MAIK,IAAIF,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,MAA2B,IAA/B,EAAqC;MACxCC,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,IAAyBF,IAAI,CAACc,IAA9B;MACAV,eAAe,CAAC,CAAD,CAAf,CAAmBF,MAAnB,IAA6BG,iBAA7B;IACD,CAHI,MAIA,IAAIF,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,MAA2B,IAA/B,EAAqC;MACxCC,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,IAAyBF,IAAI,CAACc,IAA9B;MACAV,eAAe,CAAC,CAAD,CAAf,CAAmBF,MAAnB,IAA6BG,iBAA7B;IACD,CAHI,MAIA,IAAIF,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,MAA2B,IAA/B,EAAqC;MACxCC,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,IAAyBF,IAAI,CAACc,IAA9B;MACAV,eAAe,CAAC,CAAD,CAAf,CAAmBF,MAAnB,IAA6BG,iBAA7B;IACD,CAHI,MAIA,IAAIF,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,MAA2B,IAA/B,EAAqC;MACxCC,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,IAAyBF,IAAI,CAACc,IAA9B;MACAV,eAAe,CAAC,CAAD,CAAf,CAAmBF,MAAnB,IAA6BG,iBAA7B;IACD,CAHI,MAIA,IAAIF,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,MAA2B,IAA/B,EAAqC;MACxCC,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,IAAyBF,IAAI,CAACc,IAA9B;MACAV,eAAe,CAAC,CAAD,CAAf,CAAmBF,MAAnB,IAA6BG,iBAA7B;IACD,CAHI,MAIA,IAAIF,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,MAA2B,IAA/B,EAAqC;MACxCF,IAAI,CAACkB,UAAL,GAAkBb,iBAAlB;MACAF,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,IAAyBF,IAAI,CAACc,IAA9B;MACAV,eAAe,CAAC,CAAD,CAAf,CAAmBF,MAAnB,IAA6BG,iBAA7B;IACD,CAJI,MAKA;MACHL,IAAI,CAACkB,UAAL,GAAkBb,iBAAlB;MACAF,WAAW,CAAC,CAAD,CAAX,CAAeD,MAAf,IAAyBF,IAAI,CAACc,IAA9B;MACAV,eAAe,CAAC,CAAD,CAAf,CAAmBF,MAAnB,IAA6BF,IAAI,CAACkB,UAAlC,CAHG,CAIH;IACD,CApC0B,CAsC3B;;;IACAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BjB,WAA7B,EAvC2B,CAyC3B;IACA;EAGD,CA7CD,CAlB8E,CAgoBACE;IAAA,uBACI;MAAK,EAAE,EAAG,OAAMF,KAAM,EAAtB;MAAyB,SAAS,EAAG,cAAaC,MAAO,EAAzD;MAA4D,GAAG,EAAEF,IAAI,CAACiB,GAAtE;MAA2E,OAAO,EAAE,MAAMN,QAAQ;IAAlG;MAAA;MAAA;MAAA;IAAA;EADJ,iBADF;AAKD,CA/KD;;GAAMb,I;UAC+CD,S,EAErBA,S;;;KAH1BC,I;AAiLN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}