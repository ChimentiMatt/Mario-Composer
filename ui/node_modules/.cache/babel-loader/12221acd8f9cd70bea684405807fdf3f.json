{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Documents\\\\Dev\\\\MarioMusic\\\\ui\\\\src\\\\components\\\\Note.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useGlobal } from 'reactn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  _s();\n\n  let {\n    note,\n    index,\n    column,\n    arraysLists,\n    instrumentLists\n  } = _ref;\n  const [currnetInstrument, setCurrnetInstrument] = useGlobal(\"currnetInstrument\");\n\n  const hearNote = () => {\n    new Audio(`./sounds/${currnetInstrument}/${note.name}${currnetInstrument}.mp3`).play();\n    addNoteToArray();\n  };\n\n  const addNoteToArray = () => {\n    if (arraysLists[6][column] !== null) {\n      arraysLists[7][column] = note.name;\n      instrumentLists[7][column] = note.instrument;\n    } else if (arraysLists[5][column] !== null) {\n      arraysLists[6][column] = note.name;\n      instrumentLists[6][column] = note.instrument;\n    } else if (arraysLists[4][column] !== null) {\n      arraysLists[5][column] = note.name;\n      instrumentLists[5][column] = note.instrument;\n    } else if (arraysLists[3][column] !== null) {\n      arraysLists[4][column] = note.name;\n      instrumentLists[4][column] = note.instrument;\n    } else if (arraysLists[2][column] !== null) {\n      arraysLists[3][column] = note.name;\n      instrumentLists[3][column] = note.instrument;\n    } else if (arraysLists[1][column] !== null) {\n      arraysLists[2][column] = note.name;\n      instrumentLists[2][column] = note.instrument;\n    } else if (arraysLists[0][column] !== null) {\n      arraysLists[1][column] = note.name;\n      instrumentLists[1][column] = note.instrument;\n    } else {\n      arraysLists[0][column] = note.name;\n      instrumentLists[0][column] = note.instrument; // note.instrument = currnetInstrument\n    }\n\n    console.log('playList1', arraysLists[0]);\n    console.log(\"PlayListArray\", arraysLists);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: index,\n      className: `note column${column} bg-slate-500`,\n      src: note.img,\n      onClick: () => hearNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Note, \"EweU4ld52G9jZzIxF9eWtY4ipvU=\", false, function () {\n  return [useGlobal];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["useState","useGlobal","Note","note","index","column","arraysLists","instrumentLists","currnetInstrument","setCurrnetInstrument","hearNote","Audio","name","play","addNoteToArray","instrument","console","log","img"],"sources":["C:/Users/matth/Documents/Dev/MarioMusic/ui/src/components/Note.jsx"],"sourcesContent":["import { useState, useGlobal } from 'reactn'\r\n\r\n\r\nconst Note = ({ note, index, column, arraysLists, instrumentLists } ) => {\r\n  const [currnetInstrument, setCurrnetInstrument ] = useGlobal(\"currnetInstrument\")\r\n\r\n  const hearNote = () => {\r\n    new Audio(`./sounds/${currnetInstrument}/${note.name}${currnetInstrument}.mp3`).play()\r\n    addNoteToArray()\r\n  }\r\n\r\n  const addNoteToArray = () => {\r\n    if (arraysLists[6][column] !== null) {\r\n      arraysLists[7][column] = note.name\r\n      instrumentLists[7][column] = note.instrument\r\n    }\r\n    else if (arraysLists[5][column] !== null) {\r\n      arraysLists[6][column] = note.name\r\n      instrumentLists[6][column] = note.instrument\r\n    }\r\n    else if (arraysLists[4][column] !== null) {\r\n      arraysLists[5][column] = note.name\r\n      instrumentLists[5][column] = note.instrument\r\n    }\r\n    else if (arraysLists[3][column] !== null) {\r\n      arraysLists[4][column] = note.name\r\n      instrumentLists[4][column] = note.instrument\r\n    }\r\n    else if (arraysLists[2][column] !== null) {\r\n      arraysLists[3][column] = note.name\r\n      instrumentLists[3][column] = note.instrument\r\n    }\r\n    else if (arraysLists[1][column] !== null) {\r\n      arraysLists[2][column] = note.name\r\n      instrumentLists[2][column] = note.instrument\r\n    }\r\n    else if (arraysLists[0][column] !== null) {\r\n      arraysLists[1][column] = note.name\r\n      instrumentLists[1][column] = note.instrument\r\n    }\r\n    else {\r\n      arraysLists[0][column] = note.name\r\n      instrumentLists[0][column] = note.instrument\r\n      // note.instrument = currnetInstrument\r\n    }\r\n\r\n    console.log('playList1', arraysLists[0])\r\n    console.log(\"PlayListArray\", arraysLists)\r\n  }\r\n  \r\n \r\n\r\n\r\n  return (\r\n    <>  \r\n        <img id={index} className={`note column${column} bg-slate-500`} src={note.img} onClick={() => hearNote()}/>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Note"],"mappings":"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"},"metadata":{},"sourceType":"module"}